---
title: "Class 5: Data Viz with ggplot"
author: "Bayah Essayem (A17303992)"
format: html
---

## Intro to ggplot

There are many graphics system in R (ways to make plots and figures). These  include "base" R plots. Today we will focus mostly on **ggplot2** package.

Let's start with a plot of a simple built in dataset called 'cars'.

```{r}
cars
```

```{r}
plot(cars)

```

Let's see how we can make this figure using **ggplot**. First I need to install this package on my computer. To install any R package I use the function 'install.packages()'

> I will run 'install.packages("ggplot2") in my R console not this quarto document.

```{r}
#ggplot(cars)
```

This creates an error because we don't have the R package installed yet. Now that it is installed, you still have to "call" the add on package or load it up from "library()" with the 'library(ggplot2)' so it can work (this applies to any coding language).

```{r}
library(ggplot2)
ggplot(cars)
```

All ggplot figures have at least 3 things (called layers). These include:
**data** (the input dataset I want to plot from),
**aes** (the aesthetic mapping of the data to my plot),
**geoms** (the geom_point(), geom_line(), etc. that I want to draw).

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```

Let's add a line to show the relationship here:
```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_line()
```

Let's add a shadow thingy, that is referred to as smooth:

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth()
```

Make it more linear:

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm") +
  theme_bw() +
  labs(title="My first ggplot")
```

> Q1 Which geometric layer should be used to create scatter plots in ggplot2?

geom_point()

## Gene expression figure

The code to  read the dataset

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"

genes <- read.delim(url)

head(genes)
```

>How many genes are in this dataset?

```{r}
nrow(genes)
```


A first plot of this dataset

```{r}
ggplot(genes) +
  
  aes(x=Condition1, y=Condition2, col=State) +
  
  geom_point() +
  
  theme_bw() +
  
  scale_color_manual( values=c("blue", "gray", "red"))
  
  labs(title="Gene Expresion Changes Upon Drug Treatment",
         x="Control Expression ",
         y="Drug Presence Expression")
```
> Q. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?

```{r}
round( table(genes$State)/nrow(genes),4)
```

```{r}
n.tot <- nrow(genes)
vals <- table(genes$State)
vals.percent <- vals/n.tot *100
round(vals.percent,2)
```


```{r}
plot(1:10)
```
> Here library that I already installed in my console is being called using "library", I repeated this for both gapminder package and dplyr

```{r}
library(gapminder)
```

## install.packages("dplyr")  
## un-comment to install if needed

```{r}
library(dplyr)

gapminder_2007 <- gapminder %>% filter(year==2007)
```
> This is for creating a graph representing population by continent in 2007

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.45) +
  scale_size_area(max_size = 8) +
facet_wrap(~year)
```
> Here I am adding another graph this time representing the 1957 population

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.45) +
  scale_size_area(max_size = 10) +
facet_wrap(~year)
```

> Placing them side by side

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)
ggplot(gapminder_1957) +
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) +
  geom_point(alpha=0.6) +
  scale_size_area(max_size = 6) +
facet_wrap(~year)
```


